security:
    encoders:
        Application\Sonata\UserBundle\Entity\User: sha512
        Symfony\Component\Security\Core\User\User: plaintext
        Darkish\UserBundle\Entity\Operator:
            algorithm: bcrypt

    role_hierarchy:
        ROLE_ADMIN:       [ROLE_USER, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        fos_userbundle:
            id: fos_user.user_manager
        operators:
            entity: { class: DarkishUserBundle:Operator, property: username }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        
        admin_area:
            pattern:    ^/admin
#            http_basic: ~
            provider: operators
            anonymous: ~
            form_login:
                login_path: /admin/operator/login
                check_path: /admin/operator/login_check
            remember_me:
                key:      "%secret%"
                lifetime: 31536000 # 365 days in seconds
                path:     /
                domain:   ~ # Defaults to the current domain from $_SERVER
            logout:
                path:   /admin/user/logout
#        admin:
#            pattern:            /admin(.*)
#            context:            user
#            form_login:
#                provider:       fos_userbundle
#                login_path:     /admin/login
#                use_forward:    false
#                check_path:     /admin/login_check
#                failure_path:   null
#            logout:
#                path:           /admin/logout
#            anonymous:          true
        

    access_control:
        
        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/user/ajax/is_logged_in, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/operator/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/, role: [ROLE_ADMIN] }
        - { path: ^/.*, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/modi/, roles: ROLE_ADMIN }
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
    acl:
        connection: default


parameters:
   # ... other parameters
    security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap
    # optionally use a custom MaskBuilder
    #sonata.admin.security.mask.builder.class: Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder