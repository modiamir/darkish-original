imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    translator: ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig', 'php']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles: [ "FOSCommentBundle" ]    
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   "%database_driver%"
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types: ~
        # if using pdo_sqlite as your database driver, add the path in parameters.yml
        # e.g. database_path: "%kernel.root_dir%/data/data.db3"
        # path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
                mappings: ~


# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }


services:
    my.subscriber:
        class: Darkish\CategoryBundle\EventListener\TreeSubscriber
        tags:
            - { name: doctrine.event_subscriber, connection: default }
    my_user.manager:
        class: Darkish\UserBundle\EventListener\UserManager
        arguments:
            - @security.encoder_factory
        tags:
            - { name: doctrine.event_subscriber, connection: default }
    my_comment.subscriber:
        class: Darkish\CommentBundle\EventListener\CommentSubscriber
        tags:
            - { name: doctrine.event_subscriber, connection: default}
        arguments: ["@service_container"]



# app/config/config.yml
knp_menu:
    # use "twig: false" to disable the Twig extension and the TwigRenderer
    twig:
        template: knp_menu.html.twig
    #  if true, enables the helper for PHP templates
    templating: true
    # the renderer to use, list is also available by default
    default_renderer: twig
    
liip_imagine:
    resolvers:
       default:
          web_path: ~

    filter_sets:
        cache: ~
        web_thumb:
            quality: 60
            filters:
                thumbnail: { size: [1280, 960], mode: inset }
        mobile_thumb:
            quality: 60
            filters:
                thumbnail: { size: [640, 480], mode: inset }
        icon_thumb:
            quality: 60
            filters:
                thumbnail: { size: [128, 128], mode: outbound }

dubture_f_fmpeg:
    ffmpeg_binary: ffmpeg
    ffprobe_binary: ffprobe
    binary_timeout: 0
    threads_count: 4

oodle_krumo:
    skin:
        selected: schabalon.com
    css:
        url: /krumo/
    display:
        show_version: true
        show_call_info: true
        cascade: [5,10]

fos_comment:
    db_driver: orm
    class:
        model:
            comment: Darkish\CommentBundle\Entity\Comment
            thread: Darkish\CommentBundle\Entity\Thread

# jms_serializer:
#     metadata:
#         directories:
#             FOSCB:
#                 namespace_prefix: "FOS\\CommentBundle"
#                 path: "%kernel.root_dir%/Resources/serializer/FOSCB"

sensio_framework_extra:
    request: { converters: true }


fos_rest:
    disable_csrf_role: ROLE_API
    param_fetcher_listener: true
    view:
        mime_types:
            json: ['application/json', 'application/json;version=1.0', 'application/json;version=1.1']
        view_response_listener: 'force'
        formats:
            json: true
        templating_formats:
            html: true
    format_listener:
        rules:
            - { path: ^/, priorities: [ html, json, xml ], fallback_format: ~, prefer_extension: true }
        media_type:
            version_regex: '/(v|version)=(?P<version>[0-9\.]+)/'
    exception:
        codes:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': 404
            'Doctrine\ORM\OptimisticLockException': HTTP_CONFLICT
        messages:
            'Symfony\Component\Routing\Exception\ResourceNotFoundException': true
    allowed_methods_listener: true
    access_denied_listener:
        json: true
    body_listener: true


# fos_rest:
#     body_converter:
#         enabled: true
#     param_fetcher_listener: true
#     body_listener: true
#     format_listener: true
#     disable_csrf_role: ROLE_API
#     view:
#         formats:
#             rss: true
#             xml: false
#             json: true
#         templating_formats:
#             html: true
#         force_redirects:
#             html: true
#         failed_validation: HTTP_BAD_REQUEST
#         default_engine: twig
#         view_response_listener: 'force'
#         exception_wrapper_handler:  null

#     routing_loader:
#         default_format: json
#     exception:
#         enabled: true
#     service:
#         exception_handler:    fos_rest.view.exception_wrapper_handler


nelmio_api_doc: ~

pierrre_encrypter:
    encrypters: #Encrypters list, requires at least one encrypter.
        my_encrypter: #Encrypter name
            key: "@kernel.secret" #The secret that is used to encrypt data. By default, it will use the kernel secret.
            algorithm: "rijndael-128" #Encryption algorithm
            mode: "cbc" #Encryption mode
            random_initialization_vector: true #If you set it to false, it will use a blank string as initialization vector.
            base64: true #Encode the encrypted data with the base64 algorithm.
            base64_url_safe: true #Replace "+" and "/" characters by "-" and "_".
    twig: #Twig extension
        enabled: false #Enable extension
        default_encrypter: null #Default encrypter. By default, it's the first encrypter

nelmio_cors:
    defaults:
        allow_credentials: false
        allow_origin: []
        allow_headers: []
        allow_methods: []
        expose_headers: []
        max_age: 0
        hosts: []
        origin_regex: false
    paths:
        '^/api/':
            allow_origin: ['*']
            allow_headers: ['X-Custom-Auth']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
            max_age: 3600
        '^/':
            origin_regex: true
            allow_origin: ['^http://localhost:[0-9]+']
            allow_headers: ['X-Custom-Auth']
            allow_methods: ['POST', 'PUT', 'GET', 'DELETE']
            max_age: 3600
            hosts: ['^api\.']