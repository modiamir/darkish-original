<?php

namespace Proxies\__CG__\Darkish\CategoryBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Center extends \Darkish\CategoryBundle\Entity\Center implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'id', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'name', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'subTitle', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'sort', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'centerType', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'numOfFloors', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'numOfUnits', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'longitude', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'latitude', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'iconIndex', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'showBrands', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'showOffers', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'recordId', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'treeIndex', 'records');
        }

        return array('__isInitialized__', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'id', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'name', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'subTitle', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'sort', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'centerType', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'numOfFloors', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'numOfUnits', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'longitude', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'latitude', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'iconIndex', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'showBrands', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'showOffers', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'recordId', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\Center' . "\0" . 'treeIndex', 'records');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Center $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubTitle($subTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubTitle', array($subTitle));

        return parent::setSubTitle($subTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubTitle', array());

        return parent::getSubTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSort($sort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSort', array($sort));

        return parent::setSort($sort);
    }

    /**
     * {@inheritDoc}
     */
    public function getSort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSort', array());

        return parent::getSort();
    }

    /**
     * {@inheritDoc}
     */
    public function setCenterType($centerType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCenterType', array($centerType));

        return parent::setCenterType($centerType);
    }

    /**
     * {@inheritDoc}
     */
    public function getCenterType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCenterType', array());

        return parent::getCenterType();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumOfFloors($numOfFloors)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumOfFloors', array($numOfFloors));

        return parent::setNumOfFloors($numOfFloors);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumOfFloors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumOfFloors', array());

        return parent::getNumOfFloors();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumOfUnits($numOfUnits)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumOfUnits', array($numOfUnits));

        return parent::setNumOfUnits($numOfUnits);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumOfUnits()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumOfUnits', array());

        return parent::getNumOfUnits();
    }

    /**
     * {@inheritDoc}
     */
    public function setLongitude($longitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLongitude', array($longitude));

        return parent::setLongitude($longitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLongitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLongitude', array());

        return parent::getLongitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setLatitude($latitude)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLatitude', array($latitude));

        return parent::setLatitude($latitude);
    }

    /**
     * {@inheritDoc}
     */
    public function getLatitude()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLatitude', array());

        return parent::getLatitude();
    }

    /**
     * {@inheritDoc}
     */
    public function setIconIndex($iconIndex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIconIndex', array($iconIndex));

        return parent::setIconIndex($iconIndex);
    }

    /**
     * {@inheritDoc}
     */
    public function getIconIndex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIconIndex', array());

        return parent::getIconIndex();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowBrands($showBrands)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowBrands', array($showBrands));

        return parent::setShowBrands($showBrands);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowBrands()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowBrands', array());

        return parent::getShowBrands();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowOffers($showOffers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowOffers', array($showOffers));

        return parent::setShowOffers($showOffers);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowOffers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowOffers', array());

        return parent::getShowOffers();
    }

    /**
     * {@inheritDoc}
     */
    public function setRecordId($recordId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRecordId', array($recordId));

        return parent::setRecordId($recordId);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecordId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecordId', array());

        return parent::getRecordId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTreeIndex($treeIndex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTreeIndex', array($treeIndex));

        return parent::setTreeIndex($treeIndex);
    }

    /**
     * {@inheritDoc}
     */
    public function getTreeIndex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTreeIndex', array());

        return parent::getTreeIndex();
    }

    /**
     * {@inheritDoc}
     */
    public function addRecord(\Darkish\CategoryBundle\Entity\Record $records)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRecord', array($records));

        return parent::addRecord($records);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRecord(\Darkish\CategoryBundle\Entity\Record $records)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRecord', array($records));

        return parent::removeRecord($records);
    }

    /**
     * {@inheritDoc}
     */
    public function getRecords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRecords', array());

        return parent::getRecords();
    }

}
