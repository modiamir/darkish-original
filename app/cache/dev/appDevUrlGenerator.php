<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'darkish_panel_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Darkish\\PanelBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'darkish_category_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'darkish_newstree_gettreejson' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsTreeController::getJsonTreeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/newstree/getjsontree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_newstree' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsTreeController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/newstree/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_newstree_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsTreeController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/newstree/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_newstree_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsTreeController::newAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/newstree/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_newstree_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsTreeController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/newstree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_newstree_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsTreeController::editAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/newstree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_newstree_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsTreeController::updateAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/newstree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_newstree_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsTreeController::deleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/newstree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_newstree_addnews' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsTreeController::addNewsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/newstree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/news/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/news/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/news/ajax/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::editAction',  ),  2 =>   array (    '_method' => 'put',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/news/ajax/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_approve' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::approveAction',  ),  2 =>   array (    '_method' => 'put',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/news/ajax/news/approve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/news/ajax/news/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_get_tree' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::getTreeAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/news/ajax/gettree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_get_tree_linear' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::getTreeLinearAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/news/ajax/gettree_linear',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_get_news_for_category' => array (  0 =>   array (    0 => 'cid',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::getNewsForCategoryAction',    '_format' => 'json',    'page' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cid',    ),    2 =>     array (      0 => 'text',      1 => '/admin/news/ajax/get_news_for_cat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_total_pages_for_category' => array (  0 =>   array (    0 => 'cid',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::getTotalPagesForCatAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cid',    ),    1 =>     array (      0 => 'text',      1 => '/admin/news/ajax/get_total_pages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_get_generate_csrf' => array (  0 =>   array (    0 => 'intention',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::generateCsrfAction',    '_format' => 'json',    'intention' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intention',    ),    1 =>     array (      0 => 'text',      1 => '/admin/news/ajax/generate_csrf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_get_is_csrf_valid' => array (  0 =>   array (    0 => 'token',    1 => 'intention',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::isCsrfValidAction',    '_format' => 'json',    'intention' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intention',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/admin/news/ajax/is_csrf_valid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_get_news' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::getNewsAction',    '_format' => 'json',    'intention' => '',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/news/ajax/get_news',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_upload_image' => array (  0 =>   array (    0 => 'iid',    1 => 'action',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::uploadImageAction',    'action' => 'edit',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'action',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'iid',    ),    2 =>     array (      0 => 'text',      1 => '/admin/news/ajax/upload_files',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_gen_rand_upload_key' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::generateRandomUploadKeyAction',  ),  2 =>   array (    '_method' => 'get',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/news/ajax/gen_rand_upload_key',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_get_new_id' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::getNewIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/news/ajax/get_new_id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'news_get_files_images' => array (  0 =>   array (    0 => 'entityId',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\NewsController::getFilesImagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'entityId',    ),    1 =>     array (      0 => 'text',      1 => '/admin/news/ajax/get_files_images',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/offer/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/offer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/offer/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/offer/ajax/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::editAction',  ),  2 =>   array (    '_method' => 'put',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/offer/ajax/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_approve' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::approveAction',  ),  2 =>   array (    '_method' => 'put',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/offer/ajax/offer/approve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/offer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/offer/ajax/offer/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_get_tree' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::getTreeAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/offer/ajax/gettree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_get_tree_linear' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::getTreeLinearAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/offer/ajax/gettree_linear',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_get_offer_for_category' => array (  0 =>   array (    0 => 'cid',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::getofferForCategoryAction',    '_format' => 'json',    'page' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cid',    ),    2 =>     array (      0 => 'text',      1 => '/admin/offer/ajax/get_offer_for_cat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_total_pages_for_category' => array (  0 =>   array (    0 => 'cid',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::getTotalPagesForCatAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cid',    ),    1 =>     array (      0 => 'text',      1 => '/admin/offer/ajax/get_total_pages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_get_generate_csrf' => array (  0 =>   array (    0 => 'intention',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::generateCsrfAction',    '_format' => 'json',    'intention' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intention',    ),    1 =>     array (      0 => 'text',      1 => '/admin/offer/ajax/generate_csrf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_get_is_csrf_valid' => array (  0 =>   array (    0 => 'token',    1 => 'intention',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::isCsrfValidAction',    '_format' => 'json',    'intention' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intention',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/admin/offer/ajax/is_csrf_valid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'offer_get_offer' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\OfferController::getofferAction',    '_format' => 'json',    'intention' => '',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/offer/ajax/get_offer',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/classified/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_show' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/classified',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_new' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::newAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/classified/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::createAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/classified/ajax/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::editAction',  ),  2 =>   array (    '_method' => 'put',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/classified/ajax/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_approve' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::approveAction',  ),  2 =>   array (    '_method' => 'put',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/classified/ajax/classified/approve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::updateAction',  ),  2 =>   array (    '_method' => 'post|put',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/classified',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::deleteAction',  ),  2 =>   array (    '_method' => 'post|delete',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/classified/ajax/classified/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_get_tree' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::getTreeAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/classified/ajax/gettree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_get_tree_linear' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::getTreeLinearAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/classified/ajax/gettree_linear',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_get_classified_for_category' => array (  0 =>   array (    0 => 'cid',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::getclassifiedForCategoryAction',    '_format' => 'json',    'page' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cid',    ),    2 =>     array (      0 => 'text',      1 => '/admin/classified/ajax/get_classified_for_cat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_total_pages_for_category' => array (  0 =>   array (    0 => 'cid',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::getTotalPagesForCatAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cid',    ),    1 =>     array (      0 => 'text',      1 => '/admin/classified/ajax/get_total_pages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_get_generate_csrf' => array (  0 =>   array (    0 => 'intention',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::generateCsrfAction',    '_format' => 'json',    'intention' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intention',    ),    1 =>     array (      0 => 'text',      1 => '/admin/classified/ajax/generate_csrf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_get_is_csrf_valid' => array (  0 =>   array (    0 => 'token',    1 => 'intention',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::isCsrfValidAction',    '_format' => 'json',    'intention' => '',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intention',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/admin/classified/ajax/is_csrf_valid',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'classified_get_classified' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ClassifiedController::getclassifiedAction',    '_format' => 'json',    'intention' => '',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/classified/ajax/get_classified',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'managedfile' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\ManagedFileController::uploadAction',  ),  2 =>   array (    '_method' => 'post',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/managedfile/ajax/upload',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'record' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\RecordController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/record/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'record_get_tree' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\RecordController::getTreeAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/record/ajax/gettree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'record_get_tree_linear' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\RecordController::getTreeLinearAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/record/ajax/gettree_linear',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'record_get_json' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\RecordController::getJsonAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/record/ajax/getjson',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'record_get_record_for_category' => array (  0 =>   array (    0 => 'cid',    1 => 'page',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\RecordController::getRecordForCategoryAction',    '_format' => 'json',    'page' => 1,  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cid',    ),    2 =>     array (      0 => 'text',      1 => '/admin/record/ajax/get_record_for_cat',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'record_get_record' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\RecordController::getRecordAction',    '_format' => 'json',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/record/ajax/get_record',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'DarkishModi' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Darkish\\CategoryBundle\\Controller\\DefaultController::testAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/modi/test',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\SecurityFOSUser1Controller::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\SecurityFOSUser1Controller::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\SecurityFOSUser1Controller::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\SecurityFOSUser1Controller::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\SecurityFOSUser1Controller::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\SecurityFOSUser1Controller::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ResettingFOSUser1Controller::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ResettingFOSUser1Controller::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ResettingFOSUser1Controller::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ResettingFOSUser1Controller::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ResettingFOSUser1Controller::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ResettingFOSUser1Controller::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ResettingFOSUser1Controller::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ResettingFOSUser1Controller::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ProfileFOSUser1Controller::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit_authentication' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ProfileFOSUser1Controller::editAuthenticationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit-authentication',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ProfileFOSUser1Controller::editProfileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit-profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ProfileFOSUser1Controller::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_profile_edit_authentication' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ProfileFOSUser1Controller::editAuthenticationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit-authentication',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ProfileFOSUser1Controller::editProfileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit-profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\RegistrationFOSUser1Controller::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\RegistrationFOSUser1Controller::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\RegistrationFOSUser1Controller::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\RegistrationFOSUser1Controller::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\RegistrationFOSUser1Controller::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\RegistrationFOSUser1Controller::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\RegistrationFOSUser1Controller::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\RegistrationFOSUser1Controller::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ChangePasswordFOSUser1Controller::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\ChangePasswordFOSUser1Controller::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_admin_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\AdminSecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_admin_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\AdminSecurityController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'sonata_user_admin_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sonata\\UserBundle\\Controller\\AdminSecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_js_routing_js' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fos_js_routing.controller:indexAction',    '_format' => 'js',  ),  2 =>   array (    '_format' => 'js|json',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'js|json',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/js/routing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_welcome' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\WelcomeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::securityCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'acme_demo_secured_hello' => array (  0 =>   array (  ),  1 =>   array (    'name' => 'World',    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_secured_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_secured_hello_admin' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\SecuredController::helloadminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/secured/hello/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_hello' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::helloAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/demo/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        '_demo_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Acme\\DemoBundle\\Controller\\DemoController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/demo/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
