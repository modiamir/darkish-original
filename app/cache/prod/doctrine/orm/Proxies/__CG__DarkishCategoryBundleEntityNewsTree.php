<?php

namespace Proxies\__CG__\Darkish\CategoryBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class NewsTree extends \Darkish\CategoryBundle\Entity\NewsTree implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'id', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'upTreeIndex', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'treeIndex', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'sort', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'title', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'subTitle', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'backKeyTitle', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'searchKeywords', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'showSubtreeAsFilter', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'showSponsorBox', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'sponsorGroup', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'iconFileName', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'iconSetFilesName', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'fontColor', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'backColor', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'subPicShow', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'subBackground', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'subUnitHeightScale', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'hiddenTree', 'newsList');
        }

        return array('__isInitialized__', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'id', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'upTreeIndex', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'treeIndex', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'sort', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'title', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'subTitle', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'backKeyTitle', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'searchKeywords', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'showSubtreeAsFilter', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'showSponsorBox', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'sponsorGroup', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'iconFileName', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'iconSetFilesName', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'fontColor', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'backColor', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'subPicShow', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'subBackground', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'subUnitHeightScale', '' . "\0" . 'Darkish\\CategoryBundle\\Entity\\NewsTree' . "\0" . 'hiddenTree', 'newsList');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (NewsTree $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpTreeIndex($upTreeIndex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpTreeIndex', array($upTreeIndex));

        return parent::setUpTreeIndex($upTreeIndex);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpTreeIndex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpTreeIndex', array());

        return parent::getUpTreeIndex();
    }

    /**
     * {@inheritDoc}
     */
    public function setTreeIndex($treeIndex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTreeIndex', array($treeIndex));

        return parent::setTreeIndex($treeIndex);
    }

    /**
     * {@inheritDoc}
     */
    public function getTreeIndex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTreeIndex', array());

        return parent::getTreeIndex();
    }

    /**
     * {@inheritDoc}
     */
    public function setSort($sort)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSort', array($sort));

        return parent::setSort($sort);
    }

    /**
     * {@inheritDoc}
     */
    public function getSort()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSort', array());

        return parent::getSort();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubTitle($subTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubTitle', array($subTitle));

        return parent::setSubTitle($subTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubTitle', array());

        return parent::getSubTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackKeyTitle($backKeyTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackKeyTitle', array($backKeyTitle));

        return parent::setBackKeyTitle($backKeyTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackKeyTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackKeyTitle', array());

        return parent::getBackKeyTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setSearchKeywords($searchKeywords)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSearchKeywords', array($searchKeywords));

        return parent::setSearchKeywords($searchKeywords);
    }

    /**
     * {@inheritDoc}
     */
    public function getSearchKeywords()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSearchKeywords', array());

        return parent::getSearchKeywords();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowSubtreeAsFilter($showSubtreeAsFilter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowSubtreeAsFilter', array($showSubtreeAsFilter));

        return parent::setShowSubtreeAsFilter($showSubtreeAsFilter);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowSubtreeAsFilter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowSubtreeAsFilter', array());

        return parent::getShowSubtreeAsFilter();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowSponsorBox($showSponsorBox)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowSponsorBox', array($showSponsorBox));

        return parent::setShowSponsorBox($showSponsorBox);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowSponsorBox()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowSponsorBox', array());

        return parent::getShowSponsorBox();
    }

    /**
     * {@inheritDoc}
     */
    public function setSponsorGroup($sponsorGroup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSponsorGroup', array($sponsorGroup));

        return parent::setSponsorGroup($sponsorGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function getSponsorGroup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSponsorGroup', array());

        return parent::getSponsorGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function setIconFileName($iconFileName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIconFileName', array($iconFileName));

        return parent::setIconFileName($iconFileName);
    }

    /**
     * {@inheritDoc}
     */
    public function getIconFileName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIconFileName', array());

        return parent::getIconFileName();
    }

    /**
     * {@inheritDoc}
     */
    public function setIconSetFilesName($iconSetFilesName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIconSetFilesName', array($iconSetFilesName));

        return parent::setIconSetFilesName($iconSetFilesName);
    }

    /**
     * {@inheritDoc}
     */
    public function getIconSetFilesName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIconSetFilesName', array());

        return parent::getIconSetFilesName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFontColor($fontColor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFontColor', array($fontColor));

        return parent::setFontColor($fontColor);
    }

    /**
     * {@inheritDoc}
     */
    public function getFontColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFontColor', array());

        return parent::getFontColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setBackColor($backColor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBackColor', array($backColor));

        return parent::setBackColor($backColor);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackColor', array());

        return parent::getBackColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubPicShow($subPicShow)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubPicShow', array($subPicShow));

        return parent::setSubPicShow($subPicShow);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubPicShow()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubPicShow', array());

        return parent::getSubPicShow();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubBackground($subBackground)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubBackground', array($subBackground));

        return parent::setSubBackground($subBackground);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubBackground()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubBackground', array());

        return parent::getSubBackground();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubUnitHeightScale($subUnitHeightScale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubUnitHeightScale', array($subUnitHeightScale));

        return parent::setSubUnitHeightScale($subUnitHeightScale);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubUnitHeightScale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubUnitHeightScale', array());

        return parent::getSubUnitHeightScale();
    }

    /**
     * {@inheritDoc}
     */
    public function setHiddenTree($hiddenTree)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHiddenTree', array($hiddenTree));

        return parent::setHiddenTree($hiddenTree);
    }

    /**
     * {@inheritDoc}
     */
    public function getHiddenTree()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHiddenTree', array());

        return parent::getHiddenTree();
    }

    /**
     * {@inheritDoc}
     */
    public function addNewsList(\Darkish\CategoryBundle\Entity\News $newsList)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNewsList', array($newsList));

        return parent::addNewsList($newsList);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNewsList(\Darkish\CategoryBundle\Entity\News $newsList)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNewsList', array($newsList));

        return parent::removeNewsList($newsList);
    }

    /**
     * {@inheritDoc}
     */
    public function getNewsList()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNewsList', array());

        return parent::getNewsList();
    }

}
